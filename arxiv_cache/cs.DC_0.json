"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <link href=\"http://arxiv.org/api/query?search_query%3Dcat%3Acs.DC%26id_list%3D%26start%3D0%26max_results%3D50\" rel=\"self\" type=\"application/atom+xml\"/>\n  <title type=\"html\">ArXiv Query: search_query=cat:cs.DC&amp;id_list=&amp;start=0&amp;max_results=50</title>\n  <id>http://arxiv.org/api/BiiLjEPDyLUqrwXNMY1QIYRqhxI</id>\n  <updated>2025-03-22T00:00:00-04:00</updated>\n  <opensearch:totalResults xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">24016</opensearch:totalResults>\n  <opensearch:startIndex xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">0</opensearch:startIndex>\n  <opensearch:itemsPerPage xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">50</opensearch:itemsPerPage>\n  <entry>\n    <id>http://arxiv.org/abs/cs/9809125v1</id>\n    <updated>1998-09-14T14:42:26Z</updated>\n    <published>1998-09-14T14:42:26Z</published>\n    <title>Distributed Computation, the Twisted Isomorphism, and Auto-Poiesis</title>\n    <summary>  This paper presents a synchronization-based, multi-process computational\nmodel of anticipatory systems called the Phase Web. It describes a\nself-organizing paradigm that explicitly recognizes and exploits the existence\nof a boundary between inside and outside, accepts and exploits intentionality,\nand uses explicit self-reference to describe eg. auto-poiesis. The model\nexplicitly connects computation to a discrete Clifford algebraic formalization\nthat is in turn extended into homology and co-homology, wherein the recursive\nnature of objects and boundaries becomes apparent and itself subject to\nhierarchical recursion. Topsy, a computer program embodying the Phase Web, is\navailable at www.cs.auc.dk/topsy.\n</summary>\n    <author>\n      <name>Michael Manthey</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">26 pages, 4 figures. Originally submitted to the neuro-sys archive\n  which was never publicly announced (was 9809001)</arxiv:comment>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">CASYS'97 First International Conference on Computing Anticipatory\n  Systems, Liege (Belgium), August 11-15, 1997. D. Dubois, Ed (Dept.of\n  Mathematics, University of Liege)</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/9809125v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/9809125v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"F.1\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/9810019v1</id>\n    <updated>1998-10-21T18:43:47Z</updated>\n    <published>1998-10-21T18:43:47Z</published>\n    <title>Gryphon: An Information Flow Based Approach to Message Brokering</title>\n    <summary>  Gryphon is a distributed computing paradigm for message brokering, which is\nthe transferring of information in the form of streams of events from\ninformation providers to information consumers. This extended abstract outlines\nthe major problems in message brokering and Gryphon's approach to solving them.\n</summary>\n    <author>\n      <name>Robert Strom</name>\n    </author>\n    <author>\n      <name>Guruduth Banavar</name>\n    </author>\n    <author>\n      <name>Tushar Chandra</name>\n    </author>\n    <author>\n      <name>Marc Kaplan</name>\n    </author>\n    <author>\n      <name>Kevan Miller</name>\n    </author>\n    <author>\n      <name>Bodhi Mukherjee</name>\n    </author>\n    <author>\n      <name>Daniel Sturman</name>\n    </author>\n    <author>\n      <name>Michael Ward</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Two page extended abstract</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/9810019v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/9810019v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/9909013v1</id>\n    <updated>1999-09-21T13:39:03Z</updated>\n    <published>1999-09-21T13:39:03Z</published>\n    <title>Self-stabilizing mutual exclusion on a ring, even if K=N</title>\n    <summary>  We show that, contrary to common belief, Dijkstra's self-stabilizing mutual\nexclusion algorithm on a ring [Dij74,Dij82] also stabilizes when the number of\nstates per node is one less than the number of nodes on the ring.\n</summary>\n    <author>\n      <name>Jaap-Henk Hoepman</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">2 pages</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/9909013v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/9909013v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.4.5; D.1.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/9909015v1</id>\n    <updated>1999-09-21T20:51:37Z</updated>\n    <published>1999-09-21T20:51:37Z</published>\n    <title>A decision-theoretic approach to reliable message delivery</title>\n    <summary>  We argue that the tools of decision theory need to be taken more seriously in\nthe specification and analysis of systems. We illustrate this by considering a\nsimple problem involving reliable communication, showing how considerations of\nutility and probability can be used to decide when it is worth sending\nheartbeat messages and, if they are sent, how often they should be sent.\n</summary>\n    <author>\n      <name>Francis C. Chu</name>\n    </author>\n    <author>\n      <name>Joseph Y. Halpern</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">This is the full version of a paper that appears in the Proceedings\n  of the 12th International Symposium on Distributed Computing, 1998, pp. 89-10</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/9909015v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/9909015v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"F.3.1, C.2.4, C.2.1, D.4.7\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0002008v1</id>\n    <updated>2000-02-16T02:45:39Z</updated>\n    <published>2000-02-16T02:45:39Z</published>\n    <title>On Automata with Boundary</title>\n    <summary>  We present a theory of automata with boundary for designing, modelling and\nanalysing distributed systems. Notions of behaviour, design and simulation\nappropriate to the theory are defined. The problem of model checking for\ndeadlock detection is discussed, and an algorithm for state space reduction in\nexhaustive search, based on the theory presented here, is described. Three\nexamples of the application of the theory are given, one in the course of the\ndevelopment of the ideas and two as illustrative examples of the use of the\ntheory.\n</summary>\n    <author>\n      <name>R. Gates</name>\n    </author>\n    <author>\n      <name>P. Katis</name>\n    </author>\n    <author>\n      <name>N. Sabadini</name>\n    </author>\n    <author>\n      <name>R. F. C. Walters</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">41 pages, 22 figures. Uses Paul Taylor's diagrams macros, see\n  http://www.ctan.org/tex-archive/macros/generic/diagrams/taylor/</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0002008v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0002008v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.2.2; D.2.4; F.1.1\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0003054v1</id>\n    <updated>2000-03-12T00:19:24Z</updated>\n    <published>2000-03-12T00:19:24Z</published>\n    <title>A Problem-Specific Fault-Tolerance Mechanism for Asynchronous,\n  Distributed Systems</title>\n    <summary>  The idle computers on a local area, campus area, or even wide area network\nrepresent a significant computational resource---one that is, however, also\nunreliable, heterogeneous, and opportunistic. This type of resource has been\nused effectively for embarrassingly parallel problems but not for more tightly\ncoupled problems. We describe an algorithm that allows branch-and-bound\nproblems to be solved in such environments. In designing this algorithm, we\nfaced two challenges: (1) scalability, to effectively exploit the variably\nsized pools of resources available, and (2) fault tolerance, to ensure the\nreliability of services. We achieve scalability through a fully decentralized\nalgorithm, by using a membership protocol for managing dynamically available\nresources. However, this fully decentralized design makes achieving reliability\neven more challenging. We guarantee fault tolerance in the sense that the loss\nof up to all but one resource will not affect the quality of the solution. For\npropagating information efficiently, we use epidemic communication for both the\nmembership protocol and the fault-tolerance mechanism. We have developed a\nsimulation framework that allows us to evaluate design alternatives. Results\nobtained in this framework suggest that our techniques can execute scalably and\nreliably.\n</summary>\n    <author>\n      <name>Adriana Iamnitchi</name>\n    </author>\n    <author>\n      <name>Ian Foster</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">17 pages, 6 figures</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0003054v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0003054v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0004013v1</id>\n    <updated>2000-04-23T04:32:18Z</updated>\n    <published>2000-04-23T04:32:18Z</published>\n    <title>Sorting Integers on the AP1000</title>\n    <summary>  Sorting is one of the classic problems of computer science. Whilst well\nunderstood on sequential machines, the diversity of architectures amongst\nparallel systems means that algorithms do not perform uniformly on all\nplatforms. This document describes the implementation of a radix based\nalgorithm for sorting positive integers on a Fujitsu AP1000 Supercomputer,\nwhich was constructed as an entry in the Joint Symposium on Parallel Processing\n(JSPP) 1994 Parallel Software Contest (PSC94). Brief consideration is also\ngiven to a full radix sort conducted in parallel across the machine.\n</summary>\n    <author>\n      <name>Lex Weaver</name>\n    </author>\n    <author>\n      <name>Andrew Lynes</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">1994 Project Report, 23 pages</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0004013v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0004013v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.1.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0006004v1</id>\n    <updated>2000-06-02T03:14:07Z</updated>\n    <published>2000-06-02T03:14:07Z</published>\n    <title>A Note on \"Optimal Static Load Balancing in Distributed Computer\n  Systems\"</title>\n    <summary>  The problem of minimizing mean response time of generic jobs submitted to a\nheterogenous distributed computer systems is considered in this paper. A static\nload balancing strategy, in which decision of redistribution of loads does not\ndepend on the state of the system, is used for this purpose. The article is\nclosely related to a previous article on the same topic. The present article\npoints out number of inconsistencies in the previous article, provides a new\nformulation, and discusses the impact of new findings, based on the improved\nformulation, on the results of the previous article.\n</summary>\n    <author>\n      <name>S. A. Mondal</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">18 pages</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0006004v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0006004v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.4 Performance of Systems: modeling techniques; D.4.8 Perfomance:&#10;  modeling and prediction\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0006008v1</id>\n    <updated>2000-06-02T18:35:55Z</updated>\n    <published>2000-06-02T18:35:55Z</published>\n    <title>Performing work efficiently in the presence of faults</title>\n    <summary>  We consider a system of t synchronous processes that communicate only by\nsending messages to one another, and that together must perform $n$ independent\nunits of work. Processes may fail by crashing; we want to guarantee that in\nevery execution of the protocol in which at least one process survives, all n\nunits of work will be performed. We consider three parameters: the number of\nmessages sent, the total number of units of work performed (including\nmultiplicities), and time. We present three protocols for solving the problem.\nAll three are work-optimal, doing O(n+t) work. The first has moderate costs in\nthe remaining two parameters, sending O(t\\sqrt{t}) messages, and taking O(n+t)\ntime. This protocol can be easily modified to run in any completely\nasynchronous system equipped with a failure detection mechanism. The second\nsends only O(t log{t}) messages, but its running time is large (exponential in\nn and t). The third is essentially time-optimal in the (usual) case in which\nthere are no failures, and its time complexity degrades gracefully as the\nnumber of failures increases.\n</summary>\n    <author>\n      <name>Cynthia Dwork</name>\n    </author>\n    <author>\n      <name>Joseph Y. Halpern</name>\n    </author>\n    <author>\n      <name>O. Waarts</name>\n    </author>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">SIAM Journal on Computing 27:5, 1998, pp. 1457--1491</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0006008v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0006008v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0007015v1</id>\n    <updated>2000-07-10T15:59:03Z</updated>\n    <published>2000-07-10T15:59:03Z</published>\n    <title>Phase Clocks for Transient Fault Repair</title>\n    <summary>  Phase clocks are synchronization tools that implement a form of logical time\nin distributed systems. For systems tolerating transient faults by self-repair\nof damaged data, phase clocks can enable reasoning about the progress of\ndistributed repair procedures. This paper presents a phase clock algorithm\nsuited to the model of transient memory faults in asynchronous systems with\nread/write registers. The algorithm is self-stabilizing and guarantees accuracy\nof phase clocks within O(k) time following an initial state that is k-faulty.\nComposition theorems show how the algorithm can be used for the timing of\ndistributed procedures that repair system outputs.\n</summary>\n    <author>\n      <name>Ted Herman</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">22 pages, LaTeX</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0007015v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0007015v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4; D.4.5\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0009021v1</id>\n    <updated>2000-09-22T10:44:16Z</updated>\n    <published>2000-09-22T10:44:16Z</published>\n    <title>Nimrod/G: An Architecture of a Resource Management and Scheduling System\n  in a Global Computational Grid</title>\n    <summary>  The availability of powerful microprocessors and high-speed networks as\ncommodity components has enabled high performance computing on distributed\nsystems (wide-area cluster computing). In this environment, as the resources\nare usually distributed geographically at various levels (department,\nenterprise, or worldwide) there is a great challenge in integrating,\ncoordinating and presenting them as a single resource to the user; thus forming\na computational grid. Another challenge comes from the distributed ownership of\nresources with each resource having its own access policy, cost, and mechanism.\n  The proposed Nimrod/G grid-enabled resource management and scheduling system\nbuilds on our earlier work on Nimrod and follows a modular and component-based\narchitecture enabling extensibility, portability, ease of development, and\ninteroperability of independently developed components. It uses the Globus\ntoolkit services and can be easily extended to operate with any other emerging\ngrid middleware services. It focuses on the management and scheduling of\ncomputations over dynamic resources scattered geographically across the\nInternet at department, enterprise, or global level with particular emphasis on\ndeveloping scheduling schemes based on the concept of computational economy for\na real test bed, namely, the Globus testbed (GUSTO).\n</summary>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <author>\n      <name>David Abramson</name>\n    </author>\n    <author>\n      <name>Jon Giddy</name>\n    </author>\n    <arxiv:doi xmlns:arxiv=\"http://arxiv.org/schemas/atom\">10.1109/HPC.2000.846563</arxiv:doi>\n    <link title=\"doi\" href=\"http://dx.doi.org/10.1109/HPC.2000.846563\" rel=\"related\"/>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">HPC Asia 2000, IEEE Press</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0009021v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0009021v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C0\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0012024v4</id>\n    <updated>2003-12-25T23:26:57Z</updated>\n    <published>2000-12-26T23:05:58Z</published>\n    <title>Byzantine Agreement with Faulty Majority using Bounded Broadcast</title>\n    <summary>  Byzantine Agreement introduced in [Pease, Shostak, Lamport, 80] is a widely\nused building block of reliable distributed protocols. It simulates broadcast\ndespite the presence of faulty parties within the network, traditionally using\nonly private unicast links. Under such conditions, Byzantine Agreement requires\nmore than 2/3 of the parties to be compliant. [Fitzi, Maurer, 00], constructed\na Byzantine Agreement protocol for any compliant majority based on an\nadditional primitive allowing transmission to any two parties simultaneously.\nThey proposed a problem of generalizing these results to wider channels and\nfewer compliant parties. We prove that 2f &lt; kh condition is necessary and\nsufficient for implementing broadcast with h compliant and f faulty parties\nusing k-cast channels.\n</summary>\n    <author>\n      <name>Jeffrey Considine</name>\n    </author>\n    <author>\n      <name>Leonid A. Levin</name>\n    </author>\n    <author>\n      <name>David Metcalf</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">4 pages; round-up gap between bounds removed</arxiv:comment>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Journal of Cryptology, 18/3:191-217, 2005</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0012024v4\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0012024v4\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"F.1.2\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0102016v1</id>\n    <updated>2001-02-20T20:17:22Z</updated>\n    <published>2001-02-20T20:17:22Z</published>\n    <title>A Scientific Data Management System for Irregular Applications</title>\n    <summary>  Many scientific applications are I/O intensive and generate or access large\ndata sets, spanning hundreds or thousands of \"files.\" Management, storage,\nefficient access, and analysis of this data present an extremely challenging\ntask. We have developed a software system, called Scientific Data Manager\n(SDM), that uses a combination of parallel file I/O and database support for\nhigh-performance scientific data management. SDM provides a high-level API to\nthe user and internally, uses a parallel file system to store real data and a\ndatabase to store application-related metadata. In this paper, we describe how\nwe designed and implemented SDM to support irregular applications. SDM can\nefficiently handle the reading and writing of data in an irregular mesh as well\nas the distribution of index values. We describe the SDM user interface and how\nwe implemented it to achieve high performance. SDM makes extensive use of\nMPI-IO's noncontiguous collective I/O functions. SDM also uses the concept of a\nhistory file to optimize the cost of the index distribution using the metadata\nstored in the database. We present performance results with two irregular\napplications, a CFD code called FUN3D and a Rayleigh-Taylor instability code,\non the SGI Origin2000 at Argonne National Laboratory.\n</summary>\n    <author>\n      <name>Jaechun No</name>\n    </author>\n    <author>\n      <name>Rajeev Thakur</name>\n    </author>\n    <author>\n      <name>Dinesh Kaushik</name>\n    </author>\n    <author>\n      <name>Lori Freitag</name>\n    </author>\n    <author>\n      <name>Alok Choudhary</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">7 pages + title page</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0102016v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0102016v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"B.4; B.4.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0102017v1</id>\n    <updated>2001-02-21T16:04:21Z</updated>\n    <published>2001-02-21T16:04:21Z</published>\n    <title>Components and Interfaces of a Process Management System for Parallel\n  Programs</title>\n    <summary>  Parallel jobs are different from sequential jobs and require a different type\nof process management. We present here a process management system for parallel\nprograms such as those written using MPI. A primary goal of the system, which\nwe call MPD (for multipurpose daemon), is to be scalable. By this we mean that\nstartup of interactive parallel jobs comprising thousands of processes is\nquick, that signals can be quickly delivered to processes, and that stdin,\nstdout, and stderr are managed intuitively. Our primary target is parallel\nmachines made up of clusters of SMPs, but the system is also useful in more\ntightly integrated environments. We describe how MPD enables much faster\nstartup and better runtime management of parallel jobs. We show how close\ncontrol of stdio can support the easy implementation of a number of convenient\nsystem utilities, even a parallel debugger. We describe a simple but general\ninterface that can be used to separate any process manager from a parallel\nlibrary, which we use to keep MPD separate from MPICH.\n</summary>\n    <author>\n      <name>Ralph Butler</name>\n    </author>\n    <author>\n      <name>William Gropp</name>\n    </author>\n    <author>\n      <name>Ewing Lusk</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">12 pages, Workshop on Clusters and Computational Grids for Scientific\n  Computing, Sept. 24-27, 2000, Le Chateau de Faverges de la Tour, France</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0102017v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0102017v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.1.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0104002v1</id>\n    <updated>2001-04-02T18:19:06Z</updated>\n    <published>2001-04-02T18:19:06Z</published>\n    <title>Replica Selection in the Globus Data Grid</title>\n    <summary>  The Globus Data Grid architecture provides a scalable infrastructure for the\nmanagement of storage resources and data that are distributed across Grid\nenvironments. These services are designed to support a variety of scientific\napplications, ranging from high-energy physics to computational genomics, that\nrequire access to large amounts of data (terabytes or even petabytes) with\nvaried quality of service requirements. By layering on a set of core services,\nsuch as data transport, security, and replica cataloging, one can construct\nvarious higher-level services. In this paper, we discuss the design and\nimplementation of a high-level replica selection service that uses information\nregarding replica location and user preferences to guide selection from among\nstorage replica alternatives. We first present a basic replica selection\nservice design, then show how dynamic information collected using Globus\ninformation service capabilities concerning storage system properties can help\nimprove and optimize the selection process. We demonstrate the use of Condor's\nClassAds resource description and matchmaking mechanism as an efficient tool\nfor representing and matching storage resource capabilities and policies\nagainst application requirements.\n</summary>\n    <author>\n      <name>Sudharshan Vazhkudai</name>\n    </author>\n    <author>\n      <name>Steven Tuecke</name>\n    </author>\n    <author>\n      <name>Ian Foster</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">8 pages, 6 figures</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0104002v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0104002v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.1.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0105013v1</id>\n    <updated>2001-05-07T14:29:59Z</updated>\n    <published>2001-05-07T14:29:59Z</published>\n    <title>Dijkstra's Self-Stabilizing Algorithm in Unsupportive Environments</title>\n    <summary>  The first self-stabilizing algorithm [Dij73] assumed the existence of a\ncentral daemon, that activates one processor at time to change state as a\nfunction of its own state and the state of a neighbor. Subsequent research has\nreconsidered this algorithm without the assumption of a central daemon, and\nunder different forms of communication, such as the model of link registers. In\nall of these investigations, one common feature is the atomicity of\ncommunication, whether by shared variables or read/write registers. This paper\nweakens the atomicity assumptions for the communication model, proposing\nversions of [Dij73] that tolerate various weaker forms of atomicity. First, a\nsolution for the case of regular registers is presented. Then the case of safe\nregisters is considered, with both negative and positive results presented. The\npaper also presents an implementation of [Dij73] based on registers that have\nprobabilistically correct behavior, which requires a notion of weak\nstabilization.\n</summary>\n    <author>\n      <name>Shlomi Dolev</name>\n    </author>\n    <author>\n      <name>Ted Herman</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">12 pages, uses eepic.sty</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0105013v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0105013v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3; B.1.3; B.8.1; D.4.5\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0105034v1</id>\n    <updated>2001-05-29T21:59:18Z</updated>\n    <published>2001-05-29T21:59:18Z</published>\n    <title>On the Area of Hypercube Layouts</title>\n    <summary>  This paper precisely analyzes the wire density and required area in standard\nlayout styles for the hypercube. The most natural, regular layout of a\nhypercube of N^2 nodes in the plane, in a N x N grid arrangement, uses\nfloor(2N/3)+1 horizontal wiring tracks for each row of nodes. (The number of\ntracks per row can be reduced by 1 with a less regular design.) This paper also\ngives a simple formula for the wire density at any cut position and a full\ncharacterization of all places where the wire density is maximized (which does\nnot occur at the bisection).\n</summary>\n    <author>\n      <name>Ronald I. Greenberg</name>\n    </author>\n    <author>\n      <name>Lee Guan</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">8 pages, 4 figures, LaTeX</arxiv:comment>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">condensed and revised in Information Processing Letters, v. 84, n.\n  1, pp. 41--46, Sep. 2002</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0105034v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0105034v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.1.2\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0106020v1</id>\n    <updated>2001-06-11T07:46:56Z</updated>\n    <published>2001-06-11T07:46:56Z</published>\n    <title>Economic Models for Management of Resources in Grid Computing</title>\n    <summary>  The accelerated development in Grid and peer-to-peer computing has positioned\nthem as promising next generation computing platforms. They enable the creation\nof Virtual Enterprises (VE) for sharing resources distributed across the world.\nHowever, resource management, application development and usage models in these\nenvironments is a complex undertaking. This is due to the geographic\ndistribution of resources that are owned by different organizations. The\nresource owners of each of these resources have different usage or access\npolicies and cost models, and varying loads and availability. In order to\naddress complex resource management issues, we have proposed a computational\neconomy framework for resource allocation and for regulating supply and demand\nin Grid computing environments. The framework provides mechanisms for\noptimizing resource provider and consumer objective functions through trading\nand brokering services. In a real world market, there exist various economic\nmodels for setting the price for goods based on supply-and-demand and their\nvalue to the user. They include commodity market, posted price, tenders and\nauctions. In this paper, we discuss the use of these models for interaction\nbetween Grid components in deciding resource value and the necessary\ninfrastructure to realize them. In addition to normal services offered by Grid\ncomputing systems, we need an infrastructure to support interaction protocols,\nallocation mechanisms, currency, secure banking, and enforcement services.\nFurthermore, we demonstrate the usage of some of these economic models in\nresource brokering through Nimrod/G deadline and cost-based scheduling for two\ndifferent optimization strategies on the World Wide Grid (WWG) testbed.\n</summary>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <author>\n      <name>Heinz Stockinger</name>\n    </author>\n    <author>\n      <name>Jonathan Giddy</name>\n    </author>\n    <author>\n      <name>David Abrams</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Technical Track on Commercial Applications for High-Performance\n  Computing, SPIE International Symposium on The Convergence of Information\n  Technologies and Communications (ITCom 2001), August 20-24, 2001, Denver,\n  Colorado, USA</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0106020v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0106020v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0106038v1</id>\n    <updated>2001-06-15T17:09:49Z</updated>\n    <published>2001-06-15T17:09:49Z</published>\n    <title>Simple and Effective Distributed Computing with a Scheduling Service</title>\n    <summary>  High-throughput computing projects require the solution of large numbers of\nproblems. In many cases, these problems can be solved on desktop PCs, or can be\nbroken down into independent \"PC-solvable\" sub-problems. In such cases, the\nprojects are high-performance computing projects, but only because of the sheer\nnumber of the needed calculations. We briefly describe our efforts to increase\nthe throughput of one such project. We then explain how to easily set up a\ndistributed computing facility composed of standard networked PCs running\nWindows 95, 98, 2000, or NT. The facility requires no special software or\nhardware, involves little or no re-coding of application software, and operates\nalmost invisibly to the owners of the PCs. Depending on the number and quality\nof PCs recruited, performance can rival that of supercomputers.\n</summary>\n    <author>\n      <name>David M. Mackie</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">5 pgs., 5 figs., a step-by-step \"how-to\" report plus a case study,\n  for networked PCs with Windows</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0106038v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0106038v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.m; D.m\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0106056v2</id>\n    <updated>2002-03-15T16:58:08Z</updated>\n    <published>2001-06-28T15:45:35Z</published>\n    <title>Randomized Two-Process Wait-Free Test-and-Set</title>\n    <summary>  We present the first explicit, and currently simplest, randomized algorithm\nfor 2-process wait-free test-and-set. It is implemented with two 4-valued\nsingle writer single reader atomic variables. A test-and-set takes at most 11\nexpected elementary steps, while a reset takes exactly 1 elementary step. Based\non a finite-state analysis, the proofs of correctness and expected length are\ncompressed into one table.\n</summary>\n    <author>\n      <name>John Tromp</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">CWI and BioInformatics Solutions</arxiv:affiliation>\n    </author>\n    <author>\n      <name>Paul Vitanyi</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">CWI and University of Amsterdam</arxiv:affiliation>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">9 pages, 4 figures, LaTeX source; Submitted</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0106056v2\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0106056v2\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2; F.2.2\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0107034v1</id>\n    <updated>2001-07-26T15:19:00Z</updated>\n    <published>2001-07-26T15:19:00Z</published>\n    <title>NEOS Server 4.0 Administrative Guide</title>\n    <summary>  The NEOS Server 4.0 provides a general Internet-based client/server as a link\nbetween users and software applications. The administrative guide covers the\nfundamental principals behind the operation of the NEOS Server, installation\nand trouble-shooting of the Server software, and implementation details of\npotential interest to a NEOS Server administrator. The guide also discusses\nmaking new software applications available through the Server, including areas\nof concern to remote solver administrators such as maintaining security,\nproviding usage instructions, and enforcing reasonable restrictions on jobs.\nThe administrative guide is intended both as an introduction to the NEOS Server\nand as a reference for use when running the Server.\n</summary>\n    <author>\n      <name>Elizabeth D. Dolan</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">45 pages including front matter, 3 figures</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0107034v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0107034v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0108001v1</id>\n    <updated>2001-08-01T23:14:34Z</updated>\n    <published>2001-08-01T23:14:34Z</published>\n    <title>The Cactus Worm: Experiments with Dynamic Resource Discovery and\n  Allocation in a Grid Environment</title>\n    <summary>  The ability to harness heterogeneous, dynamically available \"Grid\" resources\nis attractive to typically resource-starved computational scientists and\nengineers, as in principle it can increase, by significant factors, the number\nof cycles that can be delivered to applications. However, new adaptive\napplication structures and dynamic runtime system mechanisms are required if we\nare to operate effectively in Grid environments. In order to explore some of\nthese issues in a practical setting, we are developing an experimental\nframework, called Cactus, that incorporates both adaptive application\nstructures for dealing with changing resource characteristics and adaptive\nresource selection mechanisms that allow applications to change their resource\nallocations (e.g., via migration) when performance falls outside specified\nlimits. We describe here the adaptive resource selection mechanisms and\ndescribe how they are used to achieve automatic application migration to\n\"better\" resources following performance degradation. Our results provide\ninsights into the architectural structures required to support adaptive\nresource selection. In addition, we suggest that this \"Cactus Worm\" is an\ninteresting challenge problem for Grid computing.\n</summary>\n    <author>\n      <name>Gabrielle Allen</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Max-Planck-Institut f\u00fcr Gravitationsphysik</arxiv:affiliation>\n    </author>\n    <author>\n      <name>David Angulo</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Univ of Chicago</arxiv:affiliation>\n    </author>\n    <author>\n      <name>Ian Foster</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Univ of Chicago</arxiv:affiliation>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Argonne Natnl Lab</arxiv:affiliation>\n    </author>\n    <author>\n      <name>Gerd Lanfermann</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Max-Planck-Institut f\u00fcr Gravitationsphysik</arxiv:affiliation>\n    </author>\n    <author>\n      <name>Chuang Liu</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Univ of Chicago</arxiv:affiliation>\n    </author>\n    <author>\n      <name>Thomas Radke</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Max-Planck-Institut f\u00fcr Gravitationsphysik</arxiv:affiliation>\n    </author>\n    <author>\n      <name>Ed Seidel</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Max-Planck-Institut f\u00fcr Gravitationsphysik</arxiv:affiliation>\n    </author>\n    <author>\n      <name>John Shalf</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Lawrence Berkeley Natnl Lab</arxiv:affiliation>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">14 pages, 5 figures, to be published in International Journal of\n  Supercomputing Applications</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0108001v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0108001v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0108002v1</id>\n    <updated>2001-08-02T17:13:48Z</updated>\n    <published>2001-08-02T17:13:48Z</published>\n    <title>Bounded Concurrent Timestamp Systems Using Vector Clocks</title>\n    <summary>  Shared registers are basic objects used as communication mediums in\nasynchronous concurrent computation. A concurrent timestamp system is a higher\ntyped communication object, and has been shown to be a powerful tool to solve\nmany concurrency control problems. It has turned out to be possible to\nconstruct such higher typed objects from primitive lower typed ones. The next\nstep is to find efficient constructions. We propose a very efficient wait-free\nconstruction of bounded concurrent timestamp systems from 1-writer multireader\nregisters. This finalizes, corrects, and extends, a preliminary bounded\nmultiwriter construction proposed by the second author in 1986. That work\npartially initiated the current interest in wait-free concurrent objects, and\nintroduced a notion of discrete vector clocks in distributed algorithms.\n</summary>\n    <author>\n      <name>Sibsankar Haldar</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Bell Labs</arxiv:affiliation>\n    </author>\n    <author>\n      <name>Paul Vitanyi</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">CWI and University of Amsterdam</arxiv:affiliation>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">LaTeX source, 35 pages; To apper in: J. Assoc. Comp. Mach</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0108002v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0108002v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"F.1.2; C.2.4; B.3.2;B.4.3;D.1.3;D.4.1;D.4.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0108019v1</id>\n    <updated>2001-08-27T15:54:41Z</updated>\n    <published>2001-08-27T15:54:41Z</published>\n    <title>Scalable Unix Commands for Parallel Processors: A High-Performance\n  Implementation</title>\n    <summary>  We describe a family of MPI applications we call the Parallel Unix Commands.\nThese commands are natural parallel versions of common Unix user commands such\nas ls, ps, and find, together with a few similar commands particular to the\nparallel environment. We describe the design and implementation of these\nprograms and present some performance results on a 256-node Linux cluster. The\nParallel Unix Commands are open source and freely available.\n</summary>\n    <author>\n      <name>E. Ong</name>\n    </author>\n    <author>\n      <name>E. Lusk</name>\n    </author>\n    <author>\n      <name>W. Gropp</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">9 pages, 2 figures</arxiv:comment>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">in Recent Advances in Parallel Virtual Machine and Message Passing\n  Interface, eds. Y. Cotronis and J. Dongarra, Lecture Notes in Computer\n  Science, Vol. 2131, Springer-Verlag, pp. 410-418, Sept. 2001.</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0108019v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0108019v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0109017v1</id>\n    <updated>2001-09-13T21:14:21Z</updated>\n    <published>2001-09-13T21:14:21Z</published>\n    <title>Learning from the Success of MPI</title>\n    <summary>  The Message Passing Interface (MPI) has been extremely successful as a\nportable way to program high-performance parallel computers. This success has\noccurred in spite of the view of many that message passing is difficult and\nthat other approaches, including automatic parallelization and directive-based\nparallelism, are easier to use. This paper argues that MPI has succeeded\nbecause it addresses all of the important issues in providing a parallel\nprogramming model.\n</summary>\n    <author>\n      <name>William D. Gropp</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">12 pages, 1 figure</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0109017v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0109017v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0110058v1</id>\n    <updated>2001-10-29T19:00:15Z</updated>\n    <published>2001-10-29T19:00:15Z</published>\n    <title>Teaching Parallel Programming Using Both High-Level and Low-Level\n  Languages</title>\n    <summary>  We discuss the use of both MPI and OpenMP in the teaching of senior\nundergraduate and junior graduate classes in parallel programming. We briefly\nintroduce the OpenMP standard and discuss why we have chosen to use it in\nparallel programming classes. Advantages of using OpenMP over message passing\nmethods are discussed. We also include a brief enumeration of some of the\ndrawbacks of using OpenMP and how these drawbacks are being addressed by\nsupplementing OpenMP with additional MPI codes and projects. Several projects\ngiven in my class are also described in this paper.\n</summary>\n    <author>\n      <name>Yi Pan</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">10 pages</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0110058v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0110058v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3; D.3.2\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0111028v1</id>\n    <updated>2001-11-09T14:29:16Z</updated>\n    <published>2001-11-09T14:29:16Z</published>\n    <title>The ESRF TANGO control system status</title>\n    <summary>  TANGO is an object oriented control system toolkit based on CORBA presently\nunder development at the ESRF. IN this paper, the TANGO philosophy is briefly\npresented. All the existing tools developed around TANGO will also be\npresented. This include a code genrator, a WEB interface to TANGO objects, an\nadministration tool and an interface to LabView. Finally, an xample of a TANGO\ndevice server for OPC device is given.\n</summary>\n    <author>\n      <name>JM. Chaize</name>\n    </author>\n    <author>\n      <name>A. Goetz</name>\n    </author>\n    <author>\n      <name>WD. Klotz</name>\n    </author>\n    <author>\n      <name>J. Meyer</name>\n    </author>\n    <author>\n      <name>M. Perez</name>\n    </author>\n    <author>\n      <name>E. Taurel</name>\n    </author>\n    <author>\n      <name>P. Verdier</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">3 pages</arxiv:comment>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">eConf C011127 (2001) TUAP004</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0111028v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0111028v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4;D.1.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0111031v1</id>\n    <updated>2001-11-09T16:40:09Z</updated>\n    <published>2001-11-09T16:40:09Z</published>\n    <title>Large-Scale Corba-Distributed Software Framework for Nif Controls</title>\n    <summary>  The Integrated Computer Control System (ICCS) is based on a scalable software\nframework that is distributed over some 325 computers throughout the NIF\nfacility. The framework provides templates and services at multiple levels of\nabstraction for the construction of software applications that communicate via\nCORBA (Common Object Request Broker Architecture). Various forms of\nobject-oriented software design patterns are implemented as templates to be\nextended by application software. Developers extend the framework base classes\nto model the numerous physical control points, thereby sharing the\nfunctionality defined by the base classes. About 56,000 software objects each\nindividually addressed through CORBA are to be created in the complete ICCS.\nMost objects have a persistent state that is initialized at system start-up and\nstored in a database. Additional framework services are provided by centralized\nserver programs that implement events, alerts, reservations, message logging,\ndatabase/file persistence, name services, and process management. The ICCS\nsoftware framework approach allows for efficient construction of a software\nsystem that supports a large number of distributed control points representing\na complex control application.\n</summary>\n    <author>\n      <name>Robert W. Carey</name>\n    </author>\n    <author>\n      <name>Kirby W. Fong</name>\n    </author>\n    <author>\n      <name>Randy J. Sanchez</name>\n    </author>\n    <author>\n      <name>Joseph D. Tappero</name>\n    </author>\n    <author>\n      <name>John P. Woodruff</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">5 pages, 0 figures, ICALEPCS '01</arxiv:comment>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">eConf C011127 (2001) THAI001</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0111031v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0111031v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0111033v1</id>\n    <updated>2001-11-09T20:08:18Z</updated>\n    <published>2001-11-09T20:08:18Z</published>\n    <title>Modernising the ESRF control system with GNU/Linux</title>\n    <summary>  he ESRF control system is in the process of being modernised. The present\ncontrsystem is based on VME, 10 MHz Ethernet, OS9, Solaris, HP-UX, NFS/RPC,\nMotif and C. The new control system will be based on compact PCI, 100 MHz\nEthernet, Linux, Windows, Solaris, CORBA/IIOP, C++, Java and Python. The main\nfrontend operating system will be GNU/Linux running on Intel/x86 and\nMotorola/68k. Linux will also be used on handheld devices for mobile control.\nThis poster describes how GNU/Linux is being used to modernise the control\nsystem and what problems have been encountered so far\n</summary>\n    <author>\n      <name>A. Gotz</name>\n    </author>\n    <author>\n      <name>A. Homs</name>\n    </author>\n    <author>\n      <name>B. Regad</name>\n    </author>\n    <author>\n      <name>M. Perez</name>\n    </author>\n    <author>\n      <name>P. Makijarvi</name>\n    </author>\n    <author>\n      <name>W. D. Klotz</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">3 pages</arxiv:comment>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">eConf C011127 (2001) WEAP023</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0111033v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0111033v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0111047v1</id>\n    <updated>2001-11-17T07:20:58Z</updated>\n    <published>2001-11-17T07:20:58Z</published>\n    <title>Virtual Laboratory: Enabling On-Demand Drug Design with the World Wide\n  Grid</title>\n    <summary>  Computational Grids are emerging as a popular paradigm for solving\nlarge-scale compute and data intensive problems in science, engineering, and\ncommerce. However, application composition, resource management and scheduling\nin these environments is a complex undertaking. In this paper, we illustrate\nthe creation of a virtual laboratory environment by leveraging existing Grid\ntechnologies to enable molecular modeling for drug design on distributed\nresources. It involves screening millions of molecules of chemical compounds\nagainst a protein target, chemical database (CDB) to identify those with\npotential use for drug design. We have grid-enabled the molecular docking\nprocess by composing it as a parameter sweep application using the Nimrod-G\ntools. We then developed new tools for remote access to molecules in CDB small\nmolecule database. The Nimrod-G resource broker along with molecule CDB data\nbroker is used for scheduling and on-demand processing of jobs on distributed\ngrid resources. The results demonstrate the ease of use and suitability of the\nNimrod-G and virtual laboratory tools.\n</summary>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <author>\n      <name>Kim Branson</name>\n    </author>\n    <author>\n      <name>Jon Giddy</name>\n    </author>\n    <author>\n      <name>David Abramson</name>\n    </author>\n    <link href=\"http://arxiv.org/abs/cs/0111047v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0111047v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"J.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0111048v1</id>\n    <updated>2001-11-17T07:32:44Z</updated>\n    <published>2001-11-17T07:32:44Z</published>\n    <title>A Computational Economy for Grid Computing and its Implementation in the\n  Nimrod-G Resource Brok</title>\n    <summary>  Computational Grids, coupling geographically distributed resources such as\nPCs, workstations, clusters, and scientific instruments, have emerged as a next\ngeneration computing platform for solving large-scale problems in science,\nengineering, and commerce. However, application development, resource\nmanagement, and scheduling in these environments continue to be a complex\nundertaking. In this article, we discuss our efforts in developing a resource\nmanagement system for scheduling computations on resources distributed across\nthe world with varying quality of service. Our service-oriented grid computing\nsystem called Nimrod-G manages all operations associated with remote execution\nincluding resource discovery, trading, scheduling based on economic principles\nand a user defined quality of service requirement. The Nimrod-G resource broker\nis implemented by leveraging existing technologies such as Globus, and provides\nnew services that are essential for constructing industrial-strength Grids. We\ndiscuss results of preliminary experiments on scheduling some parametric\ncomputations using the Nimrod-G resource broker on a world-wide grid testbed\nthat spans five continents.\n</summary>\n    <author>\n      <name>David Abramson</name>\n    </author>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <author>\n      <name>Jonathan Giddy</name>\n    </author>\n    <link href=\"http://arxiv.org/abs/cs/0111048v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0111048v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0202003v3</id>\n    <updated>2005-12-15T14:32:14Z</updated>\n    <published>2002-02-04T17:29:15Z</published>\n    <title>Simple Optimal Wait-free Multireader Registers</title>\n    <summary>  Multireader shared registers are basic objects used as communication medium\nin asynchronous concurrent computation. We propose a surprisingly simple and\nnatural scheme to obtain several wait-free constructions of bounded 1-writer\nmultireader registers from atomic 1-writer 1-reader registers, that is easier\nto prove correct than any previous construction. Our main construction is the\nfirst symmetric pure timestamp one that is optimal with respect to the\nworst-case local use of control bits; the other one is optimal with respect to\nglobal use of control bits; both are optimal in time.\n</summary>\n    <author>\n      <name>Paul Vitanyi</name>\n      <arxiv:affiliation xmlns:arxiv=\"http://arxiv.org/schemas/atom\">CWI and University of Amsterdam</arxiv:affiliation>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">11 pages LaTeX, 1 table, 2 pseudo-programs; previous version\n  published in Proc 16th International Symposium on DIStributed Computing (DISC\n  2002), Lecture Notes in Computer Science, Vol 2508, Springer-Verlag, Berlin,\n  118-132. New version eliminates error in the protocol (merges a split scan\n  operation that proved problematic) and defers the formal proof to a planned\n  future I/O automaton version</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0202003v3\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0202003v3\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"F.1.2; C.2.4; B.3.2; B.4.3; D.1.3; D.4.1; D.4.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0203019v1</id>\n    <updated>2002-03-14T03:44:18Z</updated>\n    <published>2002-03-14T03:44:18Z</published>\n    <title>GridSim: A Toolkit for the Modeling and Simulation of Distributed\n  Resource Management and Scheduling for Grid Computing</title>\n    <summary>  Clusters, grids, and peer-to-peer (P2P) networks have emerged as popular\nparadigms for next generation parallel and distributed computing. The\nmanagement of resources and scheduling of applications in such large-scale\ndistributed systems is a complex undertaking. In order to prove the\neffectiveness of resource brokers and associated scheduling algorithms, their\nperformance needs to be evaluated under different scenarios such as varying\nnumber of resources and users with different requirements. In a grid\nenvironment, it is hard and even impossible to perform scheduler performance\nevaluation in a repeatable and controllable manner as resources and users are\ndistributed across multiple organizations with their own policies. To overcome\nthis limitation, we have developed a Java-based discrete-event grid simulation\ntoolkit called GridSim. The toolkit supports modeling and simulation of\nheterogeneous grid resources (both time- and space-shared), users and\napplication models. It provides primitives for creation of application tasks,\nmapping of tasks to resources, and their management. To demonstrate suitability\nof the GridSim toolkit, we have simulated a Nimrod-G like grid resource broker\nand evaluated the performance of deadline and budget constrained cost- and\ntime-minimization scheduling algorithms.\n</summary>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <author>\n      <name>Manzur Murshed</name>\n    </author>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Concurrency and Computation: Practice and Experience, Wiley, May\n  2002</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0203019v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0203019v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C5\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0203020v1</id>\n    <updated>2002-03-14T03:50:19Z</updated>\n    <published>2002-03-14T03:50:19Z</published>\n    <title>A Deadline and Budget Constrained Cost-Time Optimisation Algorithm for\n  Scheduling Task Farming Applications on Global Grids</title>\n    <summary>  Computational Grids and peer-to-peer (P2P) networks enable the sharing,\nselection, and aggregation of geographically distributed resources for solving\nlarge-scale problems in science, engineering, and commerce. The management and\ncomposition of resources and services for scheduling applications, however,\nbecomes a complex undertaking. We have proposed a computational economy\nframework for regulating the supply and demand for resources and allocating\nthem for applications based on the users quality of services requirements. The\nframework requires economy driven deadline and budget constrained (DBC)\nscheduling algorithms for allocating resources to application jobs in such a\nway that the users requirements are met. In this paper, we propose a new\nscheduling algorithm, called DBC cost-time optimisation, which extends the DBC\ncost-optimisation algorithm to optimise for time, keeping the cost of\ncomputation at the minimum. The superiority of this new scheduling algorithm,\nin achieving lower job completion time, is demonstrated by simulating the\nWorld-Wide Grid and scheduling task-farming applications for different deadline\nand budget scenarios using both this new and the cost optimisation scheduling\nalgorithms.\n</summary>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <author>\n      <name>Manzur Murshed</name>\n    </author>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Technical Report, Monash University, March 2002</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0203020v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0203020v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C5\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0204048v1</id>\n    <updated>2002-04-22T20:06:42Z</updated>\n    <published>2002-04-22T20:06:42Z</published>\n    <title>Economic-based Distributed Resource Management and Scheduling for Grid\n  Computing</title>\n    <summary>  Computational Grids, emerging as an infrastructure for next generation\ncomputing, enable the sharing, selection, and aggregation of geographically\ndistributed resources for solving large-scale problems in science, engineering,\nand commerce. As the resources in the Grid are heterogeneous and geographically\ndistributed with varying availability and a variety of usage and cost policies\nfor diverse users at different times and, priorities as well as goals that vary\nwith time. The management of resources and application scheduling in such a\nlarge and distributed environment is a complex task. This thesis proposes a\ndistributed computational economy as an effective metaphor for the management\nof resources and application scheduling. It proposes an architectural framework\nthat supports resource trading and quality of services based scheduling. It\nenables the regulation of supply and demand for resources and provides an\nincentive for resource owners for participating in the Grid and motives the\nusers to trade-off between the deadline, budget, and the required level of\nquality of service. The thesis demonstrates the capability of economic-based\nsystems for peer-to-peer distributed computing by developing users'\nquality-of-service requirements driven scheduling strategies and algorithms. It\ndemonstrates their effectiveness by performing scheduling experiments on the\nWorld-Wide Grid for solving parameter sweep applications.\n</summary>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Monash University, Melbourne, Australia, April 2002</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0204048v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0204048v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.1.3, C.1.4, C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0205021v1</id>\n    <updated>2002-05-14T19:22:00Z</updated>\n    <published>2002-05-14T19:22:00Z</published>\n    <title>An Overview of a Grid Architecture for Scientific Computing</title>\n    <summary>  This document gives an overview of a Grid testbed architecture proposal for\nthe NorduGrid project. The aim of the project is to establish an inter-Nordic\ntestbed facility for implementation of wide area computing and data handling.\nThe architecture is supposed to define a Grid system suitable for solving data\nintensive problems at the Large Hadron Collider at CERN. We present the various\narchitecture components needed for such a system. After that we go on to give a\ndescription of the dynamics by showing the task flow.\n</summary>\n    <author>\n      <name>A. Waananen</name>\n    </author>\n    <author>\n      <name>M. Ellert</name>\n    </author>\n    <author>\n      <name>A. Konstantinov</name>\n    </author>\n    <author>\n      <name>B. Konya</name>\n    </author>\n    <author>\n      <name>O. Smirnova</name>\n    </author>\n    <link href=\"http://arxiv.org/abs/cs/0205021v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0205021v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4;C.5;J.2\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0205023v2</id>\n    <updated>2002-05-14T20:17:58Z</updated>\n    <published>2002-05-14T19:55:37Z</published>\n    <title>Performance evaluation of the GridFTP within the NorduGrid project</title>\n    <summary>  This report presents results of the tests measuring the performance of\nmulti-threaded file transfers, using the GridFTP implementation of the Globus\nproject over the NorduGrid network resources. Point to point WAN tests, carried\nout between the sites of Copenhagen, Lund, Oslo and Uppsala, are described. It\nwas found that multiple threaded download via the high performance GridFTP\nprotocol can significantly improve file transfer performance, and can serve as\na reliable data\n</summary>\n    <author>\n      <name>M. Ellert</name>\n    </author>\n    <author>\n      <name>A. Konstantinov</name>\n    </author>\n    <author>\n      <name>B. Konya</name>\n    </author>\n    <author>\n      <name>O. Smirnova</name>\n    </author>\n    <author>\n      <name>A. Waananen</name>\n    </author>\n    <link href=\"http://arxiv.org/abs/cs/0205023v2\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0205023v2\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.2;C.2.4;C.5\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0206038v1</id>\n    <updated>2002-06-24T18:28:21Z</updated>\n    <published>2002-06-24T18:28:21Z</published>\n    <title>A Multilevel Approach to Topology-Aware Collective Operations in\n  Computational Grids</title>\n    <summary>  The efficient implementation of collective communiction operations has\nreceived much attention. Initial efforts produced \"optimal\" trees based on\nnetwork communication models that assumed equal point-to-point latencies\nbetween any two processes. This assumption is violated in most practical\nsettings, however, particularly in heterogeneous systems such as clusters of\nSMPs and wide-area \"computational Grids,\" with the result that collective\noperations perform suboptimally. In response, more recent work has focused on\ncreating topology-aware trees for collective operations that minimize\ncommunication across slower channels (e.g., a wide-area network). While these\nefforts have significant communication benefits, they all limit their view of\nthe network to only two layers. We present a strategy based upon a multilayer\nview of the network. By creating multilevel topology-aware trees we take\nadvantage of communication cost differences at every level in the network. We\nused this strategy to implement topology-aware versions of several MPI\ncollective operations in MPICH-G2, the Globus Toolkit[tm]-enabled version of\nthe popular MPICH implementation of the MPI standard. Using information about\ntopology provided by MPICH-G2, we construct these multilevel topology-aware\ntrees automatically during execution. We present results demonstrating the\nadvantages of our multilevel approach by comparing it to the default\n(topology-unaware) implementation provided by MPICH and a topology-aware\ntwo-layer implementation.\n</summary>\n    <author>\n      <name>N. T. Karonis</name>\n    </author>\n    <author>\n      <name>B. de Supinski</name>\n    </author>\n    <author>\n      <name>I. Foster</name>\n    </author>\n    <author>\n      <name>W. Gropp</name>\n    </author>\n    <author>\n      <name>E. Lusk</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">16 pages, 8 figures</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0206038v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0206038v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0206040v2</id>\n    <updated>2002-06-25T20:34:52Z</updated>\n    <published>2002-06-25T19:55:45Z</published>\n    <title>MPICH-G2: A Grid-Enabled Implementation of the Message Passing Interface</title>\n    <summary>  Application development for distributed computing \"Grids\" can benefit from\ntools that variously hide or enable application-level management of critical\naspects of the heterogeneous environment. As part of an investigation of these\nissues, we have developed MPICH-G2, a Grid-enabled implementation of the\nMessage Passing Interface (MPI) that allows a user to run MPI programs across\nmultiple computers, at the same or different sites, using the same commands\nthat would be used on a parallel computer. This library extends the Argonne\nMPICH implementation of MPI to use services provided by the Globus Toolkit for\nauthentication, authorization, resource allocation, executable staging, and\nI/O, as well as for process creation, monitoring, and control. Various\nperformance-critical operations, including startup and collective operations,\nare configured to exploit network topology information. The library also\nexploits MPI constructs for performance management; for example, the MPI\ncommunicator construct is used for application-level discovery of, and\nadaptation to, both network topology and network quality-of-service mechanisms.\nWe describe the MPICH-G2 design and implementation, present performance\nresults, and review application experiences, including record-setting\ndistributed simulations.\n</summary>\n    <author>\n      <name>N. T. Karonis</name>\n    </author>\n    <author>\n      <name>B. Toonen</name>\n    </author>\n    <author>\n      <name>I. Foster</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">20 pages, 8 figures</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0206040v2\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0206040v2\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0207036v1</id>\n    <updated>2002-07-10T00:53:23Z</updated>\n    <published>2002-07-10T00:53:23Z</published>\n    <title>System Description for a Scalable, Fault-Tolerant, Distributed Garbage\n  Collector</title>\n    <summary>  We describe an efficient and fault-tolerant algorithm for distributed cyclic\ngarbage collection. The algorithm imposes few requirements on the local\nmachines and allows for flexibility in the choice of local collector and\ndistributed acyclic garbage collector to use with it. We have emphasized\nreducing the number and size of network messages without sacrificing the\npromptness of collection throughout the algorithm. Our proposed collector is a\nvariant of back tracing to avoid extensive synchronization between machines. We\nhave added an explicit forward tracing stage to the standard back tracing stage\nand designed a tuned heuristic to reduce the total amount of work done by the\ncollector. Of particular note is the development of fault-tolerant cooperation\nbetween traces and a heuristic that aggressively reduces the set of suspect\nobjects.\n</summary>\n    <author>\n      <name>N. Allen</name>\n    </author>\n    <author>\n      <name>T. Terriberry</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">47 pages, LaTeX</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0207036v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0207036v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4; D.4.5\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0207096v1</id>\n    <updated>2002-07-29T16:20:25Z</updated>\n    <published>2002-07-29T16:20:25Z</published>\n    <title>Noncontiguous I/O through PVFS</title>\n    <summary>  With the tremendous advances in processor and memory technology, I/O has\nrisen to become the bottleneck in high-performance computing for many\napplications. The development of parallel file systems has helped to ease the\nperformance gap, but I/O still remains an area needing significant performance\nimprovement. Research has found that noncontiguous I/O access patterns in\nscientific applications combined with current file system methods to perform\nthese accesses lead to unacceptable performance for large data sets. To enhance\nperformance of noncontiguous I/O we have created list I/O, a native version of\nnoncontiguous I/O. We have used the Parallel Virtual File System (PVFS) to\nimplement our ideas. Our research and experimentation shows that list I/O\noutperforms current noncontiguous I/O access methods in most I/O situations and\ncan substantially enhance the performance of real-world scientific\napplications.\n</summary>\n    <author>\n      <name>Avery Ching</name>\n    </author>\n    <author>\n      <name>Alok Choudhary</name>\n    </author>\n    <author>\n      <name>Wei-keng Liao</name>\n    </author>\n    <author>\n      <name>Rob Ross</name>\n    </author>\n    <author>\n      <name>William Gropp</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">10 pages, 17 figures</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0207096v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0207096v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.4.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0208021v1</id>\n    <updated>2002-08-14T09:11:20Z</updated>\n    <published>2002-08-14T09:11:20Z</published>\n    <title>Implicit Simulations using Messaging Protocols</title>\n    <summary>  A novel algorithm for performing parallel, distributed computer simulations\non the Internet using IP control messages is introduced. The algorithm employs\ncarefully constructed ICMP packets which enable the required computations to be\ncompleted as part of the standard IP communication protocol. After providing a\ndetailed description of the algorithm, experimental applications in the areas\nof stochastic neural networks and deterministic cellular automata are\ndiscussed. As an example of the algorithms potential power, a simulation of a\ndeterministic cellular automaton involving 10^5 Internet connected devices was\nperformed.\n</summary>\n    <author>\n      <name>G. A. Kohring</name>\n    </author>\n    <arxiv:doi xmlns:arxiv=\"http://arxiv.org/schemas/atom\">10.1142/S012918310300436X</arxiv:doi>\n    <link title=\"doi\" href=\"http://dx.doi.org/10.1142/S012918310300436X\" rel=\"related\"/>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">14 pages, 3 figures</arxiv:comment>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Int. J. Mod. Phys. C: Computers and Physics, vol. 14 , pp. 203-214\n  (2003).</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0208021v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0208021v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0208027v1</id>\n    <updated>2002-08-19T19:09:04Z</updated>\n    <published>2002-08-19T19:09:04Z</published>\n    <title>A Unified Theory of Shared Memory Consistency</title>\n    <summary>  Memory consistency models have been developed to specify what values may be\nreturned by a read given that, in a distributed system, memory operations may\nonly be partially ordered. Before this work, consistency models were defined\nindependently. Each model followed a set of rules which was separate from the\nrules of every other model. In our work we have defined a set of four\nconsistency properties. Any subset of the four properties yields a set of rules\nwhich constitute a consistency model. Every consistency model previously\ndescribed in the literature can be defined based on our four properties.\nTherefore, we present these properties as a unfied theory of shared memory\nconsistency.\n</summary>\n    <author>\n      <name>Robert C. Steinke</name>\n    </author>\n    <author>\n      <name>Gary J. Nutt</name>\n    </author>\n    <link href=\"http://arxiv.org/abs/cs/0208027v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0208027v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3;F.1.2\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0210002v1</id>\n    <updated>2002-10-01T10:41:52Z</updated>\n    <published>2002-10-01T10:41:52Z</published>\n    <title>GridBank: A Grid Accounting Services Architecture (GASA) for Distributed\n  Systems Sharing and Integration</title>\n    <summary>  Computational Grids are emerging as new infrastructure for Internet-based\nparallel and distributed computing. They enable the sharing, exchange,\ndiscovery, and aggregation of resources distributed across multiple\nadministrative domains, organizations and enterprises. To accomplish this,\nGrids need infrastructure that supports various services: security, uniform\naccess, resource management, scheduling, application composition, computational\neconomy, and accountability. Many Grid projects have developed technologies\nthat provide many of these services with an exception of accountability. To\novercome this limitation, we propose a new infrastructure called Grid Bank that\nprovides services for accounting. This paper presents requirements of Grid\naccountability and different models within which it can operate and proposes\nGrid Bank Services Architecture that meets them. The paper highlights\nimplementation issues with detailed discussion on format for various\nrecords/database that the GridBank need to maintain. It also presents protocols\nfor interaction between GridBank and various components within Grid computing\nenvironments.\n</summary>\n    <author>\n      <name>Alexander Barmouta Rajkumar Buyya</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">12 pages</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0210002v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0210002v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0301033v1</id>\n    <updated>2003-01-28T20:11:16Z</updated>\n    <published>2003-01-28T20:11:16Z</published>\n    <title>Computational Grids in Action: The Natinal Fusion Collaboratory</title>\n    <summary>  The National Fusion Collaboratory (NFC) project was created to advance\nscientific understanding and innovation in magnetic fusion research by enabling\nmore efficient use of existing experimental facilities through more effective\nintegration of experiment, theory, and modeling. To achieve this objective, NFC\nintroduced the concept of \"network services\", which build on top of\ncomputational Grids, and provide Fusion codes, together with their maintenance\nand hardware resources as a service to the community. This mode of operation\nrequires the development of new authorization and enforcement capabilities. In\naddition, the nature of Fusion experiments places strident quality of service\nrequirements on codes run during the experimental cycle. In this paper, we\ndescribe Grid computing requirements of the Fusion community, and present our\nfirst experiments in meeting those requirements.\n</summary>\n    <author>\n      <name>K. Keahey</name>\n    </author>\n    <author>\n      <name>T. Fredian</name>\n    </author>\n    <author>\n      <name>Q. Peng</name>\n    </author>\n    <author>\n      <name>D. P. Schissel</name>\n    </author>\n    <author>\n      <name>M. Thompson</name>\n    </author>\n    <author>\n      <name>I. Foster</name>\n    </author>\n    <author>\n      <name>M. Greenwald</name>\n    </author>\n    <author>\n      <name>D. McCune</name>\n    </author>\n    <arxiv:journal_ref xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Future Generation Computer Systems 18 (2002), 1005-1015</arxiv:journal_ref>\n    <link href=\"http://arxiv.org/abs/cs/0301033v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0301033v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.2.2; J.2\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0301035v1</id>\n    <updated>2003-01-31T01:21:21Z</updated>\n    <published>2003-01-31T01:21:21Z</published>\n    <title>On the Complexity of Buffer Allocation in Message Passing Systems</title>\n    <summary>  Message passing programs commonly use buffers to avoid unnecessary\nsynchronizations and to improve performance by overlapping communication with\ncomputation. Unfortunately, using buffers makes the program no longer portable,\npotentially unable to complete on systems without a sufficient number of\nbuffers. Effective buffer use entails that the minimum number needed for a safe\nexecution be allocated.\n  We explore a variety of problems related to buffer allocation for safe and\nefficient execution of message passing programs. We show that determining the\nminimum number of buffers or verifying a buffer assignment are intractable\nproblems. However, we give a polynomial time algorithm to determine the minimum\nnumber of buffers needed to allow for asynchronous execution. We extend these\nresults to several different buffering schemes, which in some cases make the\nproblems tractable.\n</summary>\n    <author>\n      <name>Alex Brodsky</name>\n    </author>\n    <author>\n      <name>Jan B. Pedersen</name>\n    </author>\n    <author>\n      <name>Alan Wagner</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">35 Pages, lots of figures</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0301035v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0301035v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"D.1.3;D.4.2;D.4.4;F.1.2;F.1.3\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0302006v1</id>\n    <updated>2003-02-06T03:31:02Z</updated>\n    <published>2003-02-06T03:31:02Z</published>\n    <title>Grid Market Directory: A Web Services based Grid Service Publication\n  Directory</title>\n    <summary>  As Grids are emerging as the next generation service-oriented computing\nplatforms, they need to support Grid economy that helps in the management of\nsupply and demand for resources and offers an economic incentive for Grid\nresource providers. To enable this Grid economy, a market-like Grid environment\nincluding an infrastructure that supports the publication of services and their\ndiscovery is needed. As part of the Gridbus project, we proposed and have\ndeveloped a Grid Market Directory (GMD) that serves as a registry for\nhigh-level service publication and discovery in Virtual Organisations.\n</summary>\n    <author>\n      <name>Jia Yu</name>\n    </author>\n    <author>\n      <name>Srikumar Venugopal</name>\n    </author>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Technical Report, Grid Computing and Distributed Systems Lab,\n  University of Melbourne, Jan 2003</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0302006v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0302006v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0302007v1</id>\n    <updated>2003-02-06T03:36:29Z</updated>\n    <published>2003-02-06T03:36:29Z</published>\n    <title>G-Monitor: Gridbus web portal for monitoring and steering application\n  execution on global grids</title>\n    <summary>  Grids are experiencing a rapid growth in their application and along with\nthis there is a requirement for a portal which is easy to use and scalable. We\nhave responded to this requirement by developing an easy to use, scalable,\nweb-based portal called G-Monitor. This paper proposes a generic architecture\nfor a web portal into a grid environment and discusses our implementation and\nits application.\n</summary>\n    <author>\n      <name>Martin Placek</name>\n    </author>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Technical Report, Grid Computing and Distributed Systems Lab, Dept.\n  of Computer Science and Software Engineer, The University of Melbourne,\n  Australia</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0302007v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0302007v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0302008v1</id>\n    <updated>2003-02-06T04:06:02Z</updated>\n    <published>2003-02-06T04:06:02Z</published>\n    <title>Visual Environment for Rapid Composition of Parameter-Sweep Applications\n  for Distributed Processing on Global Grids</title>\n    <summary>  Computational Grids are emerging as a platform for next-generation parallel\nand distributed computing. Large-scale parametric studies and parameter sweep\napplications find a natural place in the Grid?s distribution model. There is\nlittle or no communication between jobs. The task of parallelizing and\ndistributing existing applications is conceptually trivial. These properties of\nparametric studies make it an ideal place to start developing integrated\ndevelopment environments (IDEs) for rapidly Grid-enabling applications.\nHowever, the availability of IDEs for scientists to Grid-enable their\napplications, without the need of developing them as parallel applications\nexplicitly, is still lacking. This paper presents a Java based IDE called\nVisual Parametric Tool (VPT), developed as part of the Gridbus project, for\nrapid creation of parameter sweep (data parallel/SPMD) applications. It\nsupports automatic creation of parameter script and parameterisation of the\ninput data files, which is compatible with the Nimrod-G parameter specification\nlanguage. The usefulness of VPT is demonstrated by a case study on composition\nof molecular docking application as a parameter sweep application. Such\napplications can be deployed on clusters using the Nimrod/enFuzion system and\non global Grids using the Nimrod-G grid resource broker.\n</summary>\n    <author>\n      <name>Shoib Burq</name>\n    </author>\n    <author>\n      <name>Steve Melnikoff</name>\n    </author>\n    <author>\n      <name>Kim Branson</name>\n    </author>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Technical Report, Grid Computing and Distributed Systems Lab, Dept.\n  of Computer Science and Software Engineering, The University of Melbourne,\n  Australia</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0302008v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0302008v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.4\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n  <entry>\n    <id>http://arxiv.org/abs/cs/0302018v1</id>\n    <updated>2003-02-13T04:49:26Z</updated>\n    <published>2003-02-13T04:49:26Z</published>\n    <title>Guided Google: A Meta Search Engine and its Implementation using the\n  Google Distributed Web Services</title>\n    <summary>  With the advent of the Internet, search engines have begun sprouting like\nmushrooms after a rainfall. Only in recent years, have developers become more\ninnovative, and came up with guided searching facilities online. The goals of\nthese applications are to help ease and guide the searching efforts of a novice\nweb user toward their desired objectives. A number of implementations of such\nservices are emerging. This paper proposes a guided meta-search engine, called\n\"Guided Google\", as it serves as an interface to the actual Google.com search\nengine, using the Google Web Services.\n</summary>\n    <author>\n      <name>Ding Choon Hoong</name>\n    </author>\n    <author>\n      <name>Rajkumar Buyya</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">Technical Report, Grid Computing and Distributed Systems (GRIDS) Lab,\n  Dept. of Computer Science and Software Engineering, The University of\n  Melbourne, Australia</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/cs/0302018v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/cs/0302018v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DC\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"C.2.1\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n</feed>\n"